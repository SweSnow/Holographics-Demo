!function(){"use strict";var a=a||{};a.vertexShadersPath="./vertex-shaders",a.fragmentShadersPath="./fragment-shaders",a.assetsPath="./assets",a.log=function(){},a.Composer=function(b,c){this.width=1,this.height=1,this.settings=c||{},this.useRGBA=this.settings.useRGBA||!1,this.renderer=b,this.copyPass=new a.CopyPass(this.settings),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(1,1),this.defaultMaterial),this.scene.add(this.quad),this.camera=new THREE.OrthographicCamera(1,1,1,1,-1e4,1e4),this.front=new THREE.WebGLRenderTarget(1,1,{minFilter:void 0!==this.settings.minFilter?this.settings.minFilter:THREE.LinearFilter,magFilter:void 0!==this.settings.magFilter?this.settings.magFilter:THREE.LinearFilter,wrapS:void 0!==this.settings.wrapS?this.settings.wrapS:THREE.ClampToEdgeWrapping,wrapT:void 0!==this.settings.wrapT?this.settings.wrapT:THREE.ClampToEdgeWrapping,format:this.useRGBA?THREE.RGBAFormat:THREE.RGBFormat,type:void 0!==this.settings.type?this.settings.type:THREE.UnsignedByteType,stencilBuffer:void 0!==this.settings.stencilBuffer?this.settings.stencilBuffer:!0}),this.back=this.front.clone(),this.startTime=Date.now(),this.passes={}},a.Composer.prototype.linkPass=function(a,b){function c(b){this.message='Pass "'+a+'" already loaded.',this.name="WagnerLoadPassException",this.toString=function(){return this.message}}if(this.passes[a])throw new c(a,b);this.passes[a]=b},a.Composer.prototype.swapBuffers=function(){this.output=this.write,this.input=this.read;var a=this.write;this.write=this.read,this.read=a},a.Composer.prototype.render=function(a,b,c,d){this.copyPass.isLoaded()&&(c&&this.swapBuffers(),this.renderer.render(a,b,d?d:this.write,!0),d||this.swapBuffers())},a.Composer.prototype.toScreen=function(){this.copyPass.isLoaded()&&(this.quad.material=this.copyPass.shader,this.quad.material.uniforms.tInput.value=this.read,this.quad.material.uniforms.resolution.value.set(this.width,this.height),this.renderer.render(this.scene,this.camera))},a.Composer.prototype.toTexture=function(a){this.copyPass.isLoaded()&&(this.quad.material=this.copyPass.shader,this.quad.material.uniforms.tInput.value=this.read,this.renderer.render(this.scene,this.camera,a,!1))},a.Composer.prototype.pass=function(b){if(b instanceof a.Stack)this.passStack(b);else{if("string"==typeof b&&(this.quad.material=this.passes[b]),b instanceof THREE.ShaderMaterial&&(this.quad.material=b),b instanceof a.Pass){if(!b.isLoaded())return;return void b.run(this)}b.isSim||(this.quad.material.uniforms.tInput.value=this.read),this.quad.material.uniforms.resolution.value.set(this.width,this.height),this.quad.material.uniforms.time.value=.001*(Date.now()-this.startTime),this.renderer.render(this.scene,this.camera,this.write,!1),this.swapBuffers()}},a.Composer.prototype.passStack=function(a){a.getPasses().forEach(function(a){this.pass(a)}.bind(this))},a.Composer.prototype.reset=function(){this.read=this.front,this.write=this.back,this.output=this.write,this.input=this.read},a.Composer.prototype.setSource=function(a){this.copyPass.isLoaded()&&(this.quad.material=this.copyPass.shader,this.quad.material.uniforms.tInput.value=a,this.renderer.render(this.scene,this.camera,this.write,!0),this.swapBuffers())},a.Composer.prototype.setSize=function(b,c){this.width=b,this.height=c,this.camera.projectionMatrix.makeOrthographic(b/-2,b/2,c/2,c/-2,this.camera.near,this.camera.far),this.quad.scale.set(b,c,1);var d=this.front.clone();d.width=b,d.height=c,this.quad.material instanceof a.Pass&&(this.quad.material.uniforms.tInput.value=d),this.front=d,d=this.back.clone(),d.width=b,d.height=c,this.back=d},a.Composer.prototype.defaultMaterial=new THREE.MeshBasicMaterial,a.loadShader=function(a,b){var c=new XMLHttpRequest;c.onload=function(){var a=c.responseText;b(a)}.bind(this),c.onerror=function(){function b(a){this.message='Shader "'+a+"\" couldn't be loaded.",this.name="WagnerLoadShaderException",this.toString=function(){return this.message}}throw new b(a)},c.onabort=function(){function b(a){this.message='Shader "'+a+'" load was aborted.',this.name="WagnerLoadShaderException",this.toString=function(){return this.message}}throw new b(a)},c.open("get",a,!0),c.send()},a.processShader=function(b,c){a.log("Processing Shader | Performing uniform Reflection...");for(var h,j,k,l,d=/uniform\s+([^\s]+)\s+([^\s]+)\s*;/gi,e=/uniform\s+([^\s]+)\s+([^\s]+)\s*\[\s*(\w+)\s*\]*\s*;/gi,f={sampler2D:{type:"t",value:function(){return new THREE.Texture}},samplerCube:{type:"t",value:function(){}},bool:{type:"b",value:function(){return 0}},"int":{type:"i",value:function(){return 0}},"float":{type:"f",value:function(){return 0}},vec2:{type:"v2",value:function(){return new THREE.Vector2}},vec3:{type:"v3",value:function(){return new THREE.Vector3}},vec4:{type:"v4",value:function(){return new THREE.Vector4}},bvec2:{type:"v2",value:function(){return new THREE.Vector2}},bvec3:{type:"v3",value:function(){return new THREE.Vector3}},bvec4:{type:"v4",value:function(){return new THREE.Vector4}},ivec2:{type:"v2",value:function(){return new THREE.Vector2}},ivec3:{type:"v3",value:function(){return new THREE.Vector3}},ivec4:{type:"v4",value:function(){return new THREE.Vector4}},mat2:{type:"v2",value:function(){return new THREE.Matrix2}},mat3:{type:"v3",value:function(){return new THREE.Matrix3}},mat4:{type:"v4",value:function(){return new THREE.Matrix4}}},g={"float":{type:"fv",value:function(){return[]}},vec3:{type:"v3v",value:function(){return[]}}},i={resolution:{type:"v2",value:new THREE.Vector2(1,1),"default":!0},time:{type:"f",value:Date.now(),"default":!0},tInput:{type:"t",value:new THREE.Texture,"default":!0}};null!==(h=d.exec(c));)h.index===d.lastIndex&&d.lastIndex++,j=h[1],k=h[2],a.log("  > SINGLE",j,k),i[k]={type:f[j].type,value:f[j].value()};for(;null!==(h=e.exec(c));)h.index===d.lastIndex&&d.lastIndex++,j=h[1],k=h[2],l=h[3],a.log("  > ARRAY",l,j,k),i[k]={type:g[j].type,value:g[j].value()};a.log("Uniform reflection completed. Compiling...");var m=new THREE.ShaderMaterial({uniforms:i,vertexShader:b,fragmentShader:c,shading:THREE.FlatShading,depthWrite:!1,depthTest:!1,transparent:!0});return a.log("Compiled"),m},a.Pass=function(){a.log("Pass constructor"),this.shader=null,this.loaded=null,this.params={},this.isSim=!1},a.Pass.prototype.loadShader=function(b,c){var d=this,e="varying vec2 vUv; void main() { vUv = uv; gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 ); }";a.loadShader(a.fragmentShadersPath+"/"+b,function(b){d.shader=a.processShader(e,b),c&&c.apply(d)})},a.Pass.prototype.mapUniforms=function(a){var b=this.params;for(var c in a)a[c]["default"]||!function(c){Object.defineProperty(b,c,{get:function(){return a[c].value},set:function(b){a[c].value=b},configurable:!1})}(c)},a.Pass.prototype.run=function(a){a.pass(this.shader)},a.Pass.prototype.isLoaded=function(){return null!==this.loaded?this.loaded:void(this.shader instanceof THREE.ShaderMaterial&&(this.loaded=!0))},a.Pass.prototype.getOfflineTexture=function(a,b,c){var d=new THREE.WebGLRenderTarget(a,b,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:c?THREE.RGBAFormat:THREE.RGBFormat});return d},a.CopyPass=function(){a.Pass.call(this),a.log("CopyPass constructor"),this.loadShader("copy-fs.glsl")},a.CopyPass.prototype=Object.create(a.Pass.prototype),a.GenericPass=function(b,c){a.Pass.call(this);var d=this;a.loadShader(a.vertexShadersPath+"/orto-vs.glsl",function(e){a.loadShader(b,function(b){d.shader=a.processShader(e,b),c&&c.apply(d)})})},a.GenericPass.prototype=Object.create(a.Pass.prototype),a.Stack=function(a){this.passItems=[],this.shadersPool=a,this.passes=[]},a.Stack.prototype.addPass=function(a,b,c,d){var e,f={shaderName:a,enabled:b||!1};return this.passItems.push(f),e=this.passItems.length,this.updatePasses(),d?this.movePassToIndex(this.passItems[e],d):e-1},a.Stack.prototype.removePass=function(a){this.passItems.splice(a,1),this.updatePasses()},a.Stack.prototype.enablePass=function(a){this.passItems[a].enabled=!0,this.updatePasses()},a.Stack.prototype.disablePass=function(a){this.passItems[a].enabled=!1,this.updatePasses()},a.Stack.prototype.isPassEnabled=function(a){return this.passItems[a].enabled},a.Stack.prototype.movePassToIndex=function(a,b){return this.passItems.splice(b,0,this.passItems.splice(a,1)[0]),this.updatePasses(),b},a.Stack.prototype.reverse=function(){this.passItems.reverse(),this.updatePasses()},a.Stack.prototype.updatePasses=function(){this.passes=this.shadersPool.getPasses(this.passItems),this.passItems.forEach(function(a,b){void 0===a.params&&(a.params=JSON.parse(JSON.stringify(this.passes[b].params)))}.bind(this))},a.Stack.prototype.getPasses=function(){return this.passes},a.ShadersPool=function(){this.availableShaders=[]},a.ShadersPool.prototype.getPasses=function(a){var b,c=[];return this.availableShaders.forEach(function(a){a.used=!1}),a&&a.forEach(function(a,d){a.enabled&&(b=this.getShaderFromPool(a.shaderName),a.params&&(b.params=this.extendParams(b.params,a.params)),c.push(b))}.bind(this)),c},a.ShadersPool.prototype.getShaderFromPool=function(b){var c,d;if(b&&a[b]){for(var e=this.availableShaders.length-1;e>=0;e--)if(d=this.availableShaders[e],!d.used&&d.name===b){d.used=!0,c=d.pass;break}return c||(c=new a[b],d={pass:c,name:b,used:!0},this.availableShaders.push(d)),c}},a.ShadersPool.prototype.extendParams=function(a,b){for(var f,c={},d=0,e=arguments.length;e>d;d++)for(f in arguments[d])arguments[d].hasOwnProperty(f)&&(c[f]=arguments[d][f]);return c},window.WAGNER=a}();